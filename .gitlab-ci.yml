image: node

variables:                                                                                                                                                                                                                                                                                                                                                                    
  STAGING_IMAGE_NAME: sendy-docker-local.jfrog.io/vue_partner_portal:latest_$CI_COMMIT_SHORT_SHA
  PROD_IMAGE_NAME: sendy-docker-local.jfrog.io/node_private_api:prod_$CI_COMMIT_SHORT_SHA
  BETA_IMAGE_NAME: sendy-docker-local.jfrog.io/node_private_api:beta_$CI_COMMIT_SHORT_SHA
stages:
  - lint
  - test
  - buildpush
  - deploy

# Lets name our Job eslint, because that's what it's doing.
eslint:
  # tell eslint what stage it is. (This could also be build or test for example)
  stage: lint
  # What scripts do we want to run?
  tags:
    - docker
  script:
    # install eslint
    - npm i eslint
    # Run eslint
    - npm run lint
  only:
    - dev
    - staging

# Lets name our Job unitTest, because that's what it's doing.
unitTest:
  # tell eslint what stage it is. (This could also be build or test for example)
  stage: test
  # What scripts do we want to run?
  tags:
    - docker
  script:
    # install mocha
    - npm i mocha
    # Run tests
    # - npm run test:unit
  only:
    - dev
    - staging
 

#builds and pushes the docker image to the artifactory staging 
buildpushstaging:
  stage: buildpush
  tags:
    - shell
  script:
    - docker build --build-arg DOCKER_ENV=testing --pull -t $STAGING_IMAGE_NAME -f Dockerfile .
    - docker push $STAGING_IMAGE_NAME
  only:
    - staging

#deploys the app to staging environment
deployStaging:
  stage: deploy
  tags:
    - shell
  script:
    - ssh -v -f -o StrictHostKeyChecking=no -l admin kubetest-master.sendyit.com "kubectl set image deploy vue-partner-portal  vue-partner-portal=$STAGING_IMAGE_NAME"
  only:
    - staging


#builds and pushes the docker image to the artifactory prod
buildpushbeta:
  stage: buildpush
  tags:
    - shell
  script:
    - docker build --build-arg DOCKER_ENV=prod --pull -t $BETA_IMAGE_NAME -f Dockerfile .
    - docker push $BETA_IMAGE_NAME
  only:
    - master 



#deploys the app to beta environment
deploybeta:
  stage: deploy
  tags:
    - shell
  script:
    - docker run -t --rm -e AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID -e AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY -e AWS_DEFAULT_REGION=eu-west-1 silintl/ecs-deploy --cluster fe-prod --service-name vuebetapartnerportal -t 600 -i $BETA_IMAGE_NAME

  only:
    - master 


#builds and pushes the docker image to the artifactory prod
buildpushprod:
  stage: buildpush
  tags:
    - shell
  script:
    - docker build --build-arg DOCKER_ENV=prod --pull -t $PROD_IMAGE_NAME -f Dockerfile .
    - docker push $PROD_IMAGE_NAME
  only:
    - Production 


# deploy to prod
deployProd:
  stage: deploy
  tags:
    - shell
  script:
    - docker run -t --rm -e AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID -e AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY -e AWS_DEFAULT_REGION=eu-west-1 silintl/ecs-deploy --cluster fe-prod --service-name vueprodpartnerportal -t 600 -i $PROD_IMAGE_NAME
    
  only:
    - Production
